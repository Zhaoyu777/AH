Symfony

优点：

Symfony 是我了解的PHP框架中功能最强大的，而且我使用时间比较长，但是很多功能还是没有挖掘出来；它完整实现了MVC三层，封装了所有东西，包括 $POST，$GET 数据，异常处理，调试功能，数据检测；包含强大的缓存功能，自动加载Class（这个功能很爽），强大的语言支持；具有很强大的view层操作，能够零碎的包含单个多个文件；非常强大的配置功能，使用yml配置能够控制所有框架和程序运行行为，强大到让人无语；能够很随意的定义各种自己的class，并且symfony能够自动加载（auto load）这些class，能够在程序中随意调用；包含强大的多层级项目和应用管理：Project --> Application --> Module --> Action，能够满足一个项目下多个应用的需要，并且每层可以定义自己的类库，配置文件，layout；非常强大的命令行操作功能，包括建立项目、建立应用、建立模块、刷新缓存等等. Symfony绝对是开发大型复杂项目的首选，因为使用了Symfony，将大大节约开发成本，并且多人协作的时候，不会出现问题，在Project级别定义好基础Class以后，任何模块都能够重用，大大复用代码.

缺点：

Symfony最大的问题也在于使用了太多风格迥异的开源项目来组合成框架。由于Mojavi和Propel本身都相当复杂，因此Symfony的结构非常复杂，难以理解和学习。 缓存功能无法控制，每次开发调试总是缓存，需要执行 symfony cc,symfony rc来清除和重建缓存. 效率不是很高，特别是解析模板和读取配置文件的过程，花费时间不少. 学习成本很高，并且国内没有成熟的社区和文档，连中文手册都没有，相应的要掌握所有功能，需要花费比较多的时间.

评价：

Symfony绝对是企业级的框架，唯一能够貌似能够跟Java领域哪些强悍框架抗衡的东西；强悍的东西，自然学习复杂，但是相应的对项目开发也比较有帮助，自然是推荐复杂的项目使用Symfony来处理，觉得是值得，后期的维护成本比较低，复用性很强。相应的如果使用Symfony的应该都是比较复杂的互联网项目，那么相应的就要考虑关于数据库分布的问题，那么就需要抛弃Symfony自带的数据库操作层，需要自己定义，当然了，Symfony支持随意的构造model层。

ThinkPHP

ThinkPHP快速、借用了成熟的Java思想，但是实际使用呢过程中有些基本的CURD的关联操作居然存在错误。ThinkPHP基于PHP5，充分利用了PHP5的特性。让我十分喜欢的是ThinkPHP的数据验证和自动填充。但是这个也束缚了ThinkPHP导致不考虑添加自动统计字段等小功能.

ThinkPHP还有一个特性是从自动生成数据，但是这个却不支持关联。唉，ThinkPHP有着十分优秀的特性和思想，却有着很一般的应用实践体验。 ThinkPHP的文档号称最丰富，事实也是这样，但是ThinkPHP的文档和示例却又太泛泛，比如表关联只介绍了其在model里面的定义，其他的CURD操作都没有提及。
